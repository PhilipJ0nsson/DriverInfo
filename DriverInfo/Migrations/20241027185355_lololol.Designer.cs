// <auto-generated />
using System;
using DriverInfo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DriverInfo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241027185355_lololol")]
    partial class lololol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DriverInfo.Models.Driver", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverID"));

                    b.Property<string>("CarReg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsibleEmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmountIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountOut")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DriverID");

                    b.HasIndex("ResponsibleEmployeeID");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("DriverInfo.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DriverInfo.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<decimal>("AmountIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DriverID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventID");

                    b.HasIndex("DriverID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DriverInfo.Models.Driver", b =>
                {
                    b.HasOne("DriverInfo.Models.Employee", "ResponsibleEmployee")
                        .WithMany("Drivers")
                        .HasForeignKey("ResponsibleEmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResponsibleEmployee");
                });

            modelBuilder.Entity("DriverInfo.Models.Event", b =>
                {
                    b.HasOne("DriverInfo.Models.Driver", "Driver")
                        .WithMany("Events")
                        .HasForeignKey("DriverID");

                    b.HasOne("DriverInfo.Models.Employee", "Employee")
                        .WithMany("Events")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Driver");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DriverInfo.Models.Driver", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("DriverInfo.Models.Employee", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
